profile: full

shared:
  ingress_domain: "<INGRESS_DOMAIN>" # eg: tap.corp.tanzu
  image_registry:
    project_path: "<PVT_PROJECT_REGISTRY_SERVER>/<PVT_PROJECT_REGISTRY_REPO>" #"YOURINPUT.azurecr.io/myimages"
    secret:
      name: <PVT_PROJECT_REGISTRY_CREDENTIALS_SECRET_NAME> #registry-credentials
      namespace: <PVT_INSTALL_REGISTRY_SECRET_NAMESPACE> # tap-install
  kubernetes_version: <K8S_VERSION> # Required when Kubernetes version is 1.25 or later.
ceip_policy_disclosed: true

metadata_store:
  app_service_type: ClusterIP # (optional) Defaults to LoadBalancer. Change to NodePort for distributions that don't support LoadBalancer
  ns_for_export_app_cert: "*"
buildservice:
  kp_default_repository: "<PVT_PROJECT_REGISTRY_SERVER>/<PVT_BUILD_SERVICE_REGISTRY_REPO>" # "YOURINPUT.azurecr.io/build-service"
  kp_default_repository_secret:
    name: <PVT_PROJECT_REGISTRY_CREDENTIALS_SECRET_NAME> #registry-credentials
    namespace: <PVT_INSTALL_REGISTRY_SECRET_NAMESPACE> # tap-install
  include_legacy_bom: false
  exclude_dependencies: true

scanning:
  metadataStore:
    url: ""

contour:
  envoy:
    service:
      type: LoadBalancer

grype:
  namespace: <NAMESPACE_WHERE_SCANNING_WILL_RUN> #default
  targetImagePullSecret: <PVT_PROJECT_REGISTRY_CREDENTIALS_SECRET_NAME> #registry-credentials

supply_chain: <OOTB_SUPPLY_CHAIN> #basic #testing #testing_scanning

ootb_supply_chain_<OOTB_SUPPLY_CHAIN>:
  registry:
    server: "<PVT_PROJECT_REGISTRY_SERVER>" # YOURINPUT.azurecr.io
    repository: "<PVT_PROJECT_REGISTRY_REPO>" # myimages
  gitops:
    server_address: <GITOPS_SERVER_ADDRESS> # https://github.com
    repository_owner: <GITOPS_REPO_OWNER> # according-to-ali
    repository_name: <GITOPS_SERVER_ADDRESS>/<GITOPS_REPO_OWNER>/<GITOPS_REPO_NAME> # https://github.com/according-to-ali/gitops-repo
    branch: "<GITOPS_REPO_BRANCH_NAME>" # main
    user_name: "<GITOPS_COMMITING_USERNAME>" # YOURINPUTNotRealUser
    user_email: "<GITOPS_COMMITING_USEREMAIL>" # YOURINPUTNotRealUser@cluster.local
    commit_message: "<GITOPS_COMMIT_TEXT>" # tap-demo-commit-from-YOURINPUTNotRealUser
    ssh_secret: "<GIT_SSH_SECRET>" # git-ssh
    commit_strategy: direct
  scanning:
    source:
      policy: scan-policy
      template: blob-source-scan-template
    image:
      policy: scan-policy
      template: private-image-scan-template
  cluster_builder: default
  service_account: default

tap_gui:
  service_type: ClusterIP
  ingressEnabled: "true"
  ingressDomain: "<INGRESS_DOMAIN>" # eg: tap.corp.tanzu
  metadataStoreAutoconfiguration: true # Create a service account, the Kubernetes control plane token and the requisite app_config block to enable communications between Tanzu Application Platform GUI and SCST - Store.
  app_config:
    app:
      baseUrl: http://tap-gui.<INGRESS_DOMAIN> #eg: http://tap-gui.tap.corp.tanzu
    catalog:
      locations:
        - type: url
          target: <CATALOG_URL> # https://github.com/YOURINPUT/tap-gui/blob/main/blank/catalog-info.yaml
    backend:
      baseUrl: http://tap-gui.<INGRESS_DOMAIN>
      cors:
        origin: http://tap-gui.<INGRESS_DOMAIN>

cnrs:
  domain_name: apps.<INGRESS_DOMAIN> # eg: apps.tap.corp.tanzu
  domain_template: "{{.Name}}-{{.Namespace}}.{{.Domain}}"

excluded_packages:
  - policy.apps.tanzu.vmware.com
  - image-policy-webhook.signing.apps.tanzu.vmware.com
  - learningcenter.tanzu.vmware.com
  - workshops.learningcenter.tanzu.vmware.com