[
    {
        "name": "<CARTO_SERVICE_ACCOUNT_NAME>",
        "hint": "Service account name to be used in cartographer template. The service account is typically asigned with appropriate roles and binding to that the supply chain can have necessary permissions to do its job."
    },
    {
        "name": "<CARTO_SERVICE_ACCOUNT_NAMESPACE>",
        "hint": "Namespace for Service account.",
        "defaultvalue": "default"
    },
    {
        "name": "<CARTO_GIT_TEMPLATE_NAME>",
        "hint": "The name of the cluster source template that is responsible for defining GitRepository from FluxCD. eg: source",
        "defaultvalue": "source"
    },
    {
        "name": "<CARTO_GIT_SECRET_NAME>",
        "hint": "K8s secret name for private git reposity that will be specified in the workload.yaml. FluxCD uses this secret to authenticate with the git repository. This wizard must take this value."
    },
    {
        "name": "<CARTO_GIT_POLL_INTERVAL_IN_SECONDS>",
        "hint": "The poll interval for fluxCD. Value MUST be provides in seconds unit. eg: 60 (for 1 min)",
        "defaultvalue": "60"
    },
    {
        "name": "<CARTO_TEST_TEMPLATE_NAME>",
        "hint": "The name of the cluster source template that is responsible for defining process for source code test. eg: test.",
        "defaultvalue": "test"
    },
    {
        "name": "<CARTO_TEST_TEKTON_TASK_TYPE>",
        "hint": "Tekton Task type that will execute the test.",
        "options": ["ClusterTask", "Task"],
        "defaultvalue": "ClusterTask"
    },
    {
        "name": "<CARTO_TEST_TEKTON_TASK_NAME>",
        "hint": "Tekton Task name that will execute the test."
    },
    {
        "name": "<CARTO_IMAGE_TEMPLATE_NAME>",
        "hint": "The name of the ClusterImageTemplate that is responsible for defining image creation process. eg: kpackimage.",
        "defaultvalue": "kpackimage"
    },
    {
        "name": "<CARTO_IMAGE_PREFIX>",
        "hint": "The image prefix to tag the produced image with. eg: merlin.azurecr.io/apps/, merlindockerhubusername/ etc. MUST be with the followed by slash."
    },
    {
        "name": "<CARTO_IMAGE_KPACK_BUILDER_TYPE>",
        "hint": "The kpack builder type that will execute the image building process. eg: ClusterBuilder, Builder",
        "options": ["ClusterBuilder", "Builder"],
        "defaultvalue": "ClusterBuilder"
    },
    {
        "name": "<CARTO_IMAGE_KPACK_BUILDER_NAME>",
        "hint": "The kpack builder name that will execute the image building process. eg: default",
        "defaultvalue": "default"
    },
    {
        "name": "<CARTO_IMAGE_GRYPE_TEMPLATE_NAME>",
        "hint": "The name of the ClusterImageTemplate (for image scanning) that is responsible for defining image scanning process. eg: imgscanner.",
        "defaultvalue": "imgscanner"
    },
    {
        "name": "<CARTO_SOURCE_GRYPE_TEMPLATE_NAME>",
        "hint": "The name of the ClusterSourceTemplate (for source scanning) that is responsible for defining source scanning process. eg: srcscanner.",
        "defaultvalue": "srcscanner"
    },
    {
        "name": "<CARTO_GRYPE_REGISTRY_SECRET_NAME>",
        "hint": "Docker Registry Secret (of type kubernetes.io/dockerconfigjson) name that gype will use to access image from registry. eg: registry-regcred\nThis secret does not have to exist now, you can create it at a later point.",
        "isRecordAsEnvVar": true
    },
    {
        "name": "<CARTO_GRYPE_CONFIG_SECRET_NAME>",
        "hint": "Grype Config Secret (of type Opaque with stringData) name that gype will use to mount policies. eg: grype-config.\nPlease perform ${greencolor}'cat binaries/templates/grype-config-secret.sample.yaml'${normalcolor} to see a sample for guidance on how to create.\nThis secret does not have to exist now, you can create it at a later point.",
        "isRecordAsEnvVar": true
    },
    {
        "name": "<CARTO_GRYPE_TEKTON_TASK_TYPE>",
        "hint": "Tekton Task type that will execute grype scanning.",
        "options": ["ClusterTask", "Task"],
        "defaultvalue": "ClusterTask",
        "isRecordAsEnvVar": true
    },
    {
        "name": "<CARTO_GRYPE_TEKTON_TASK_NAME>",
        "hint": "Tekton Task name that will execute the grype scanning.",
        "isRecordAsEnvVar": true
    },
    {
        "name": "<CARTO_KNATIVE_CONFIG_TEMPLATE_NAME>",
        "hint": "The name of the cluster config template that is responsible for templating the yaml file to be generated for the workload that will be appliable on top of knative. eg: app-config",
        "defaultvalue": "app-config"
    },
    {
        "name": "<CARTO_IMAGE_PULL_SECRET_NAME>",
        "hint": "Image pull secret name (eg: secret type: kubernetes.io/dockerconfigjson) that k8s will use when it will try to pull the image (as defined in the app-config file). This value is used in the config map template. eg: registry-credentials"
    },
    {
        "name": "<CARTO_GITWRITER_TEMPLATE_NAME>",
        "hint": "The name of the ClusterTemplate in combination with ClusterRunTemplate that is responsible for defining process of writing the deployable yaml (generated from the ConfigTemplate) to the git repository. This is for the git-ops operation. eg: git-writer.",
        "defaultvalue": "git-writer"
    },
    {
        "name": "<CARTO_GITWRITER_TEKTON_TASK_TYPE>",
        "hint": "Tekton Task type that will execute the git writing.",
        "options": ["ClusterTask", "Task"],
        "defaultvalue": "ClusterTask"
    },
    {
        "name": "<CARTO_GITWRITER_TEKTON_TASK_NAME>",
        "hint": "Tekton Task name that will execute the git writing."
    },
    {
        "name": "<CARTO_GITWRITER_SSH_SECRET_NAME>",
        "hint": "The name k8s ssh (not basicauth) secret. If you do not have one, then, when this will prompt for creating a new one please confirm yes. This input only needs a name.",
        "defaultvalue": "git-ssh"
    },
    {
        "name": "<CARTO_GITWRITER_REPOSITORY>",
        "hint": "The url of the git reposity where the deployable config file will be written for git-ops. format must be in like= ssh://git@github.com/username/git-repo.git",
        "use_special_replace": true
    },
    {
        "name": "<CARTO_GITWRITER_BRANCH>",
        "hint": "The branch of the git reposity where the deployable config file will be written for git-ops. eg: release"
    },
    {
        "name": "<CARTO_GITWRITER_USERNAME>",
        "hint": "The display name of the user for git commit operation. Better if it is a real user but not real user then that's ok too."
    },
    {
        "name": "<CARTO_GITWRITER_EMAIL>",
        "hint": "The display email of the user for git commit operation. Better if it is a real user but not real user then that's ok too..",
        "use_special_replace": true
    },
    {
        "name": "<CARTO_GITWRITER_COMMIT_MESSAGE>",
        "hint": "Commit message. Keep it short and simple. eg: git-ops operation",
        "use_special_replace": true
    },
    {
        "name": "<TEKTON_TASK_NAME_FOR_GITWRITER>",
        "hint": "Name for the ConfigMap GITWRITER tekton Task. You can view the generatefile here: $HOME/configs/carto/carto-gitwriter.tekton-task.configwriter.yaml"
    },
    {
        "name": "<TEKTON_TASK_NAME_FOR_MAVEN_TEST>",
        "hint": "Name for the tekton Task that will perform maven. You can view the generatefile here: $HOME/configs/carto/carto-test.tekton-task.maven.yaml"
    },
    {
        "name": "<TEKTON_TASK_NAME_FOR_GRYPE_SCANNER>",
        "hint": "Name for the tekton Task that will perform grype scan. You can view the generatefile here: $HOME/configs/carto/carto-scanner.tekton-task.grype.yaml"
    }
]