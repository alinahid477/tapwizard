---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: <TEKTON_TASK_NAME_FOR_GRYPE_SCANNER>
spec:
  description: |-
    A task that uses grype to scan source code or image
  workspaces:
    - name: registry-credentials
      optional: true
      description: |
        registry credentials eg: contnet of ~/.docker/config.json
    - name: grype-config
      optional: true
      description: |
        content of .grype.yaml
  params:
    - name: image-url
      description: The image url
      type: string
      default: "none"
    - name: blob-url
      description: The source code blob url
      type: string
      default: "none"
    - name: blob-revision
      description: The source code blob revision, not currently used.
      type: string
      default: "none"
    - name: args
      type: string
      default: "--fail-on critical --scope AllLayers"
  steps:
    - name: grype-scanner
      image: centos:latest
      env:
      - name: DOCKER_CONFIG
        value: /config
      - name: WORKSPACE_REGCRED_BOUND
        value: $(workspaces.registry-credentials.bound)
      - name: WORKSPACE_REGCRED_PATH
        value: $(workspaces.registry-credentials.path)
      - name: WORKSPACE_GRYPE_CONFIG_BOUND
        value: $(workspaces.grype-config.bound)
      - name: WORKSPACE_GRYPE_CONFIG_PATH
        value: $(workspaces.grype-config.path)
      securityContext:
        runAsUser: 0
      workingDir: /root
      script: |
        #!/usr/bin/env bash
        set -o errexit
        set -o xtrace

        if [ "${WORKSPACE_REGCRED_BOUND}" = "true" ] ; then
          mkdir -p /config
          cp "${WORKSPACE_REGCRED_PATH}/.dockerconfigjson" "/config/config.json"
          chmod 755 "/config/config.json"
        fi
        if [ "${WORKSPACE_GRYPE_CONFIG_BOUND}" = "true" ] ; then
          cp "${WORKSPACE_GRYPE_CONFIG_PATH}/.grypeconfig" ".grype.yaml"
          chmod 755 ".grype.yaml"
        fi

        curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
        
        if [ "$(params.image-url)" != "none" ] ; then
            grype $(params.image-url) $(params.args)
        elif [ "$(params.blob-url)" != "none" ] ; then
            curl -SL $(params.blob-url) | tar xvzf - 
            grype dir:. $(params.args)
        fi