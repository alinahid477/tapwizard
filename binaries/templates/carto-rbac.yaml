#@ load("@ytt:data", "data")

#
# The service-account is referenced by the workload and provides permissions for
# Cartographer to create templated objects
#

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: carto-clusterrole
rules:
  - apiGroups:
      - source.toolkit.fluxcd.io
      - kpack.io
      - kapp.k14s.io/v1alpha1
      - kappctrl.k14s.io
      - serving.knative.dev/v1
      - carto.run
      - tekton.dev
    resources:
      - gitrepositories
      - images
      - configs
      - apps
      - services
      - runnables
      - tasks
      - taskruns
    verbs: ['*']
  - apiGroups: [""]
    resources: ["configmaps","pods","pods/exec","pods/log","secrets","deployments","services","endpoints"]
    verbs: ['*']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: carto-clusterrole-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: carto-clusterrole
subjects:
  - kind: ServiceAccount
    name: #@ data.values.service_account.name
    namespace: #@ data.values.service_account.namespace

